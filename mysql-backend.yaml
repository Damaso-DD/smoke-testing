apiVersion: v1
kind: Secret
metadata:
  name: db-secrets
type: Opaque
data:
  db_root_password: WU9VUl9QQVNTV09SRA==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          imagePullPolicy: Never
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: db_root_password
          ports:
            - containerPort: 3306
              name: db-container
          volumeMounts:
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
            - mountPath: "/var/lib/mysql"
              subPath: "mysql"
              name: mysql-data
      volumes:
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data-disk
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data-disk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS db;
    USE db;
    CREATE TABLE users(user_id VARCHAR(255), user_name VARCHAR(255), user_email VARCHAR(255), user_password VARCHAR(255));
    INSERT INTO users VALUES ('1', 'john_doe', 'jonh@example.com', '1234');
    INSERT INTO users VALUES ('2', 'jane_doe', 'jane@example.com', '@#rT5');
    INSERT INTO users VALUES ('3', 'jimmy_smith', 'jimmy@example.com', 'abc123');
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: db
spec:
  ports:
  - port: 3306
    protocol: TCP
    name: mysql
  selector:
    app: db
  type: LoadBalancer
